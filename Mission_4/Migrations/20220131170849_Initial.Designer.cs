// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission_4.Models;

namespace Mission_4.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220131170849_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Mission_4.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Action/Adventure"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Sci-fi"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Musical"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Rom-Com"
                        });
                });

            modelBuilder.Entity("Mission_4.Models.FormResponse", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Edit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("FormId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            FormId = 1,
                            CategoryId = 1,
                            Director = "Jared Hess",
                            Rating = "PG",
                            Title = "Nacho Libre",
                            Year = 2006u
                        },
                        new
                        {
                            FormId = 2,
                            CategoryId = 6,
                            Director = "Christopher Nolan",
                            Rating = "PG-13",
                            Title = "Interstellar",
                            Year = 2014u
                        },
                        new
                        {
                            FormId = 3,
                            CategoryId = 2,
                            Director = "Jon Favreau",
                            Rating = "PG-13",
                            Title = "Iron Man",
                            Year = 2008u
                        },
                        new
                        {
                            FormId = 4,
                            CategoryId = 8,
                            Director = "Bill Condon",
                            Rating = "PG",
                            Title = "Beauty and the Beast",
                            Year = 2017u
                        },
                        new
                        {
                            FormId = 5,
                            CategoryId = 2,
                            Director = "Jon Watts",
                            Rating = "PG-13",
                            Title = "Spider-Man: No Way Home",
                            Year = 2021u
                        });
                });

            modelBuilder.Entity("Mission_4.Models.FormResponse", b =>
                {
                    b.HasOne("Mission_4.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
